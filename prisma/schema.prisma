generator client {
  provider = "prisma-client-js"  
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

}

//CLIENTE E AFINS
model  address {
  id           String   @id @default(uuid())
  cep          String?  @db.VarChar(45)
  place        String   @db.VarChar(100)
  number       String   @db.VarChar(45)
  neighborhood String   @db.VarChar(80)
  city         String   @db.VarChar(50)
  uf           String   @db.VarChar(2)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  client_address client_address[]
  store store[]
  order_delivery order_delivery[]
}

model  client {
  id       String   @id @default(uuid())
  cpf      String?  @unique @db.VarChar(45)
  c_interno       String?  @unique @db.VarChar(45)
  name     String   @db.VarChar(50)
  phone    String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  client_address client_address[]

  order_delivery order_delivery[]
}

model  client_address {
  id         String   @id @default(uuid())
  client_id  String?
  address_id String?
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([address_id], map: "client_address_addrees_fk_idx")

  address address? @relation(fields: [address_id],references: [id])
  client client? @relation(fields: [client_id],references: [id])

}


// DELIVERY
model  order_delivery {
  id            String   @id @default(uuid())
  user_id       String?
  date          DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  client_id     String?
  address_id    String?
  type_order_id String?
  value         Decimal  @db.Decimal(10, 2)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 
  obs           String?

  @@index([address_id], map: "order_delivery_address_fk_idx")
  @@index([client_id], map: "order_delivery_client_fk_idx")
  @@index([type_order_id], map: "order_delivery_type_order_fk_idx")
  @@index([user_id], map: "order_delivery_user_fk_idx")
  
  
  client client? @relation(fields: [client_id],references: [id])
  address address? @relation(fields: [address_id],references: [id])
  type_order type_order? @relation(fields: [type_order_id],references: [id])
  user users? @relation(fields: [user_id],references: [id])
  delivery delivery?
}

model  delivery {
  id                String    @id @default(uuid())
  user_id           String?
  date              DateTime  @default(dbgenerated("CURRENT_TIMESTAMP")) 
  motor_kilometers  Int
  order_delivery_id    String? @unique
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 
  

  @@index([user_id], map: "delivery_userid_fk,_idx")
  
  user users? @relation(fields: [user_id],references: [id])
  order_delivery order_delivery? @relation(fields: [order_delivery_id],references: [id])
  delivery_status delivery_status[]
}

model  delivery_status {
  id          String   @id @default(uuid())
  delivery_id String? 
  status_id   String?
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 
  

  @@index([delivery_id], map: "delivery_status_delivery_fk_idx")
  @@index([status_id], map: "delivery_status_status_id_fk_idx")

  delivery delivery? @relation(fields: [delivery_id],references: [id])
  status status? @relation(fields: [status_id],references: [id])
}

model  status {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(50)
  createAt DateTime  @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  delivery_status delivery_status[]

  @@map("status")
}

model  type_order {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  order_delivery order_delivery[]
} 

//USUARIOS
model  store {
  id         String   @id @default(uuid())
  filial     String   @db.VarChar(10)
  cnpj       String   @db.VarChar(20)
  name       String   @db.VarChar(100)
  address_id String?
  phone      String   @db.VarChar(45)
  email      String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([address_id], map: "store_address_fk_idx")

  address address? @relation(fields: [address_id],references: [id]) 
  users users[]
  motorcycle motorcycle[]
}

model  users {
  id          String   @id @default(uuid())
  store_id    String?
  email       String   @unique(map: "email_UNIQUE") @db.VarChar(45)
  phone       String   @db.VarChar(45)
  pass        String   @db.VarChar(60)
  name        String   @db.VarChar(45)
  position_id String?
  stats       Boolean  @default(true)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.DateTime()
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([store_id], map: "user_store_id_fk_idx")
  @@index([position_id], map: "users_position_id_fk_idx")


  delivery delivery[]
  order_delivery order_delivery[]
  store store? @relation(fields: [store_id],references: [id]) 
  position position? @relation(fields: [position_id],references: [id]) 
}

model  position {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  users users[]
}

model  permissions {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 
}

model  position_permissions {
  id             String   @id @default(uuid())
  user_id        String?
  permissions_id String?
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([permissions_id], map: "position_permissions_permissions_id_fk_idx")
  @@index([user_id], map: "position_permissions_user_id_fk_idx")
}

//MANUTENÃ‡OES
model  maintenance_motor {
  id                  String   @id @default(uuid())
  type_maintenance_id String?
  motorcycle_id       String?
  date                DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  value               Decimal  @db.Decimal(10, 2)
  location            String?  @db.VarChar(45)
  photo_receipt       String?  @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([motorcycle_id], map: "maintenance_motor_motorcycle_fk_idx")
  @@index([type_maintenance_id], map: "maintenance_motor_type_maintenance_fk_idx")

  type_maintenance type_maintenance? @relation(fields: [type_maintenance_id],references: [id]) 
  motorcycle motorcycle? @relation(fields: [motorcycle_id],references: [id])  
}

model  motorcycle {
  id       String   @id @default(uuid())
  store_id String?
  model     String   @db.VarChar(45)
  year     Int
  renavan  String?
  plate String?
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  @@index([store_id], map: "motorcycle_store_id_fk_idx")

  store store? @relation(fields: [store_id],references: [id]) 
  maintenance_motor maintenance_motor[]
}

model  type_maintenance {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(45)
  createAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) 
  updateAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) 

  maintenance_motor maintenance_motor[]

}




